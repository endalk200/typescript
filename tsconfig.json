{
  "compilerOptions": {
    "module": "commonjs",

    "target": "ES5",

    "allowJs": true, // alow js files to imported in ts files
    "checkJs": true, // works in conjuction with allowjs. Throw errors in js files

    "strict": false,
    /* The strict flag enables a wide range of type checking behavior that results 
    in stronger guarantees of program correctness.
    ==> strictBindCallApply strictFunctionTypes strictNullChecks strictPropertyInitialization
    */

    "noImplicitAny": true,
    /* Turning on noImplicitAny however TypeScript will issue an error
    whenever it would have inferred any:*/

    "noImplicitThis": true,
    /*Raise error on ‘this’ expressions with an implied ‘any’ type.*/

    "noImplicitReturns": false,
    /*Checks the return type implicitly*/

    "noImplicitUseStrict": false,
    /* */

    "removeComments": true,

    "preserveConstEnums": true,

    "outDir": "dist",
    // "outFile": "bundle.js"
    /* This can not be used unless module is None, System, or AMD. This option 
    cannot be used to bundle CommonJS or ES6 modules. */

    "sourceMap": true // For debugers to use
  },
  "include": [
    "src/**/*"
  ],
  // "files": ["filename.ts"] // instead of include
  "exclude": [
    "node_modules",
    "**/*.spec.ts"
  ],
  // NEW: Options for file/directory watching
  "watchOptions": {
    // Use native file system events for files and directories
    "watchFile": "useFsEvents",
    "watchDirectory": "useFsEvents",

    // Poll files for updates more frequently
    // when they're updated a lot.
    "fallbackPolling": "dynamicPriority"
  }
}
